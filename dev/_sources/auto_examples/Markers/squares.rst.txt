
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\Markers\squares.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_Markers_squares.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_Markers_squares.py:


Square Markers
==============

.. GENERATED FROM PYTHON SOURCE LINES 7-8

Create a signal

.. GENERATED FROM PYTHON SOURCE LINES 8-17

.. code-block:: default


    import hyperspy.api as hs
    import numpy as np

    # Create a Signal2D with 2 navigation dimensions
    rng = np.random.default_rng(0)
    data = np.ones((25, 25, 100, 100))
    s = hs.signals.Signal2D(data)








.. GENERATED FROM PYTHON SOURCE LINES 18-19

This first example shows how to draw static square markers

.. GENERATED FROM PYTHON SOURCE LINES 19-33

.. code-block:: default


    # Define the position of the squares (start at (0, 0) and increment by 10)
    offsets = np.array([np.arange(0, 100, 10)]*2).T

    m = hs.plot.markers.Squares(
        offsets=offsets,
        widths=(5,),
        angles=(0,),
        color="orange",

        )
    s.plot()
    s.add_marker(m)




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/Markers/images/sphx_glr_squares_001.png
         :alt: squares
         :srcset: /auto_examples/Markers/images/sphx_glr_squares_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/Markers/images/sphx_glr_squares_002.png
         :alt:  Signal
         :srcset: /auto_examples/Markers/images/sphx_glr_squares_002.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 34-39

Dynamic Square Markers
#########################

This first example shows how to draw dynamic squres markers, whose
position, widths and angles depends on the navigation coordinates

.. GENERATED FROM PYTHON SOURCE LINES 40-67

.. code-block:: default


    s2 = hs.signals.Signal2D(data)

    widths = np.empty(s.axes_manager.navigation_shape, dtype=object)
    heights = np.empty(s.axes_manager.navigation_shape, dtype=object)
    angles = np.empty(s.axes_manager.navigation_shape, dtype=object)
    offsets = np.empty(s.axes_manager.navigation_shape, dtype=object)

    for index in np.ndindex(offsets.shape):
        widths[index] = rng.random((10, )) * 50
        heights[index] = rng.random((10, )) * 25
        angles[index] = rng.random((10, )) * 180
        offsets[index] = rng.random((10, 2)) * 100

    m = hs.plot.markers.Squares(
        offsets=offsets,
        widths=widths,
        angles=angles,
        color="orange",
        facecolor="none",
        linewidth=3
        )


    s2.plot()
    s2.add_marker(m)




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/Markers/images/sphx_glr_squares_003.png
         :alt: squares
         :srcset: /auto_examples/Markers/images/sphx_glr_squares_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/Markers/images/sphx_glr_squares_004.png
         :alt:  Signal
         :srcset: /auto_examples/Markers/images/sphx_glr_squares_004.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 68-69

sphinx_gallery_thumbnail_number = 4


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.345 seconds)


.. _sphx_glr_download_auto_examples_Markers_squares.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: squares.py <squares.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: squares.ipynb <squares.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
